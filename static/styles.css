@import url('https://fonts.googleapis.com/css2?family=Matemasie&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Handlee&display=swap');

:root {
    --primary-color: #fff;
    --secondary-color: #000;
}

body,
html {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
    font-family: Arial, Helvetica, sans-serif;
    scroll-behavior: smooth;
}

.img-shuffle {
    position: relative;
    width: 100vw;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--primary-color);
    text-align: center;
    flex-direction: column;

    img {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 100%;
        object-fit: cover;
        opacity: 0;
        transition: opacity 1s ease-in-out, transform 10s ease-in-out;
        transform-origin: center center;
        z-index: -10;
    }

    h1 span {
        display: inline-block;
        opacity: 0;
        animation-duration: 1s;
        animation-fill-mode: both;
    }

    h1 {
        margin-top: 0;
        font-family: 'Matemasie', sans-serif;
        font-size: calc(5rem + 28 * (100vw - 375px)/ (1199 - 375));
        margin-bottom: 0.5em;
        letter-spacing: -0.7rem;
        font-weight: bold;
        line-height: 1cap;

        .nick {
            animation: growLetter 0.5s ease forwards;
            animation-delay: 1s;
        }
        
        .nick:nth-child(2) {
            animation-delay: 1.15s;
        }
        
        .nick:nth-child(3) {
            animation-delay: 1.3s;
        }
        
        .nick:nth-child(4) {
            animation-delay: 1.45s;
        }
        
        .ampersand {
            animation-delay: 1.6s;
        }
        
        .logan {
            animation: growLetter 0.7s ease forwards;
            animation-delay: 1.7s;
        }
        
        .logan:nth-child(7) {
            animation-delay: 1.7s;
        }
        
        .logan:nth-child(8) {
            animation-delay: 1.85s;
        }
        
        .logan:nth-child(9) {
            animation-delay: 2s;
        }
        
        .logan:nth-child(10) {
            animation-delay: 2.15s;
        }

        .logan:nth-child(11) {
            animation-delay: 2.3s;
        }

        .ampersand {
            animation: growAmp 0.5s ease forwards;
            animation-delay: 2.8s;
        }
    }

    p {
        font-size: calc(1rem + 10 * (100vw - 375px) / (1199 - 375));
        font-weight: 100;
        margin: 0 0 0.5em 0;
        opacity: 0;
        transform: translateY(-20px);
        animation: dropIn 2s 3s forwards; /* Adjust timing as needed */
    }

    .countdown {
        display: flex;
        justify-content: center;
        text-align: center;
    }
    
    .countdown-item {
        margin: 0 10px;
    }
    
    .countdown-number {
        font-size: 2em;
        font-weight: bold;
    }
    
    .countdown-label {
        font-size: 1em;
        text-transform: uppercase;
    }

}

.img-shuffle img.active {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.1);
}

.polka-dot {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: var(--primary-color);
    border-radius: 50%;
    animation: moveDotUp 3s ease-out infinite;
    pointer-events: none;
    z-index: -1;
}

.nav-bar { 
    background: var(--primary-color);
    position: relative;
    top: 0;
    border-radius: 50% 50% 0 0; 
    margin-top: -4vh; 
    margin-left: -12.5vw;
    margin-right: -12.5vw;
    width: 125vw; 
    height: 100px;
    display: flex; 
    justify-content: center; 
    align-items: center;
    gap: 2vw;
    z-index: 10;

    a {
        font-family: 'Open Sans', sans-serif;
        letter-spacing: 2px;
        text-decoration: none;
        text-transform: uppercase;
        color: var(--secondary-color);
        border: 3px solid;
        margin-top: 5vh;
        padding: .25em .75em;
        position: relative;
        box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px, 5px 5px 0px 0px;
        opacity: 0; /* Start hidden */
        transform: scale(0.8); /* Start smaller */
        transition: opacity 0.6s, transform 0.6s;
        animation: none; /* Initially, no animation */
    }
    
    a.in-view {
        animation: growIn 0.6s forwards; /* Apply animation on entry */
    }

    a:active {
        box-shadow: 0px 0px 0px 0px; /* Remove the shadow on active state */
        top: 5px;
        left: 5px;
    }  
}

.about-us {
    display: flex;
    font-size: calc(1rem + 10 * (100vw - 375px) / (1199 - 375));
    background-color: var(--primary-color);
    align-items: center; /* Vertically centers the content */
    justify-content: flex-start; /* Keeps text and image to the left */
    gap: 20px; /* Adds some space between the text and the image */
    padding: 1vw 5vw 1vw 5vw;
    color: var(--secondary-color);

    .text-container {
        display: flex;
        flex-direction: column; /* Stacks header and paragraph vertically */
        flex: 1; /* Allows the text container to take up remaining space */
    }

    img {
        max-width: 50%; /* Adjusts the image width */
        height: auto; /* Maintains aspect ratio */
        font-family: 'Open Sans', sans-serif;
        letter-spacing: 2px;
        text-decoration: none;
        text-transform: uppercase;
        color: var(--secondary-color);
        border: 3px solid;
        margin-top: 5vh;
        position: relative;
        box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px, 5px 5px 0px 0px;
    }
}

.heart-container {
    position: absolute;
    overflow: hidden;
    width: 100%;
    overflow: visible;
    pointer-events: none; /* Prevent user interaction */
    z-index: 100;
}

.heart {
    position: absolute;
    font-family: 'Arial', sans-serif; /* Default font family, but can be customized */
    color: red; /* Red heart color */
    transform-origin: center;
    transform: scale(0) translateY(20px) rotate(var(--initial-rotation, 0deg)); /* Rotation and scaling */
    opacity: 0;
    will-change: transform, opacity;
    animation: grow-float 5s ease-in-out forwards;
}

@keyframes grow-float {
    0% {
        transform: scale(0.5) translateY(20px) rotate(var(--initial-rotation, 0deg));
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: scale(1) translateY(-500px) rotate(calc(var(--initial-rotation, 0deg) + 45deg)); /* Add spin */
        opacity: 0;
    }
}

/* Media query for screens less than 1557px wide */
@media (max-width: 1557px) {
    .about-us {
        flex-direction: column; /* Stacks the content vertically */
        align-items: center; /* Centers the content horizontally */
        justify-content: center; /* Centers the content vertically */
        text-align: center; /* Centers text inside the text container */
    }

    .about-us img {
        max-width: 80%; /* Makes the image take up more space on smaller screens */
        margin: 20px 0; /* Adds some spacing above and below the image */
    }

    .about-us .text-container {
        order: 3; /* Moves the text below the image */
    }

    .about-us h2 {
        order: 1; /* Ensures the header is above the image */
    }
}

.registries {
    background-color: var(--secondary-color);
    display: flex; /* Use flexbox for horizontal layout */
    align-items: center; /* Vertically align the SVG and content */
    font-size: calc(0.5rem + 10 * (100vw - 375px) / (1199 - 375));
    justify-content: center;
    overflow: hidden;

    svg {
        flex-shrink: 0; /* Prevent SVG from shrinking */
        fill: var(--primary-color);
        width: 20vw; /* Adjust size of the SVG */
        height: auto; /* Maintain aspect ratio */
        margin-right: 2rem; /* Add spacing between SVG and content */
    }

    .content {
        display: flex;
        flex-direction: column; /* Stack content vertically */
        justify-content: center; /* Center the content vertically */
        text-align: left; /* Align text to the left */
        width: 50%;
        max-width: 700px;
    }

    .giftButton {
        width: 100%;
    }

    h1 {
        color: white;
        margin-bottom: 1vw;
    }

    p {
        color: white;
        margin-top: 1vw; /* Remove default margins */
    }
}

.info {
    display: flex;
    flex-direction: column;
    text-align: center;
    font-size: calc(1rem + 10 * (100vw - 375px) / (1199 - 375));
    background-color: var(--primary-color);
    align-items: center;
    justify-content: flex-start;
    gap: 20px; /* Overall spacing between elements in the container */
    padding: 1vw 5vw;
    color: var(--secondary-color);

    h1 {
        margin-bottom: 2rem;
    }

    div.section {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        gap: 20px; /* Space between the h2 and p */
        width: 100%;
        max-width: 1500px;
        text-align: left;
        position: relative;
        margin: 2rem 0;
        opacity: 0; /* Initially hidden */
        transform: translateY(20px); /* Slide in effect */
        transition: opacity 1s ease, transform 1s ease;
    }

    div.section.visible {
        opacity: 1; /* Fully visible when active */
        transform: translateY(0);
    }

    div.section h2 {
        writing-mode: vertical-rl; /* Rotate the text */
        transform: rotate(180deg); /* Flip text to read top-down */
        background-color: var(--secondary-color);
        color: var(--primary-color);
        font-size: 1.5rem;
        padding: 0.5rem;
        text-align: center;
        flex-shrink: 0;
        transition: opacity 1s ease, transform 1s ease;
    }

    div.section p {
        flex-grow: 1;
        line-height: 1.6;
        opacity: 0;
        transform: translateY(20px); /* Slide in effect */
        transition: opacity 1s ease, transform 1s ease;
    }

    div.section.visible p {
        opacity: 1; /* Fully visible when active */
        transform: translateY(0);
    }
    
    /* Style individual <h2> for better distinction (optional) */
    div.section:nth-of-type(1) h2 {
        background-color: #FFB6C1; /* Light pink */
    }

    div.section:nth-of-type(2) h2 {
        background-color: #87CEFA; /* Light blue */
    }

    div.section:nth-of-type(3) h2 {
        background-color: #98FB98; /* Pale green */
    }

    .map-container {
        width: 100%; /* Adjusts the image width */
        height: auto; /* Maintains aspect ratio */
        font-family: 'Open Sans', sans-serif;
        letter-spacing: 2px;
        text-decoration: none;
        text-transform: uppercase;
        color: var(--secondary-color);
        border: 3px solid;
        position: relative;
        box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px, 5px 5px 0px 0px;
    }
}

.hidden {
    display: none;
}

button {
    position: relative; /* Position relative for pseudo-element */
    background-color: transparent; /* Clear background */
    border: 2px solid white; /* White border */
    border-radius: 15px; /* Rounded corners */
    padding: 10px 20px; /* Adjust padding for size */
    color: white; /* Text color */
    font-size: 16px; /* Adjust font size */
    cursor: pointer; /* Pointer cursor for hover effect */
    overflow: hidden; /* Hide overflow for smooth animation */
    transition: color 0.3s ease; /* Smooth transition for text color */
    z-index: 1;
}

button::before {
    content: ''; /* Empty content for pseudo-element */
    position: absolute;
    top: 0;
    left: 0;
    width: 0; /* Start with no width */
    height: 100%; /* Full height */
    background-color: white; /* Background fill color */
    z-index: -1; /* Place behind text */
    transition: width 0.3s ease; /* Smooth transition for the fill */
}

button:hover::before {
    width: 100%; /* Fill to full width on hover */
}

button:hover {
    color: black; /* Change text color on hover */
}

.rsvpButton {
    opacity: 0; /* For initial animation */
    margin-top: 1vh;
    animation: growIn 2s 1s forwards; /* Initial grow-in animation */
    color: rgb(165, 0, 0);
    border: 2px solid rgb(165, 0, 0); /* Red border */
    cursor: default; /* Changes cursor to default instead of pointer */
}

/* Override the hover effects specifically for rsvpButton */
.rsvpButton:hover::before {
    width: 0; /* Prevent the white background fill */
}

.rsvpButton:hover {
    color: rgb(255, 0, 0); /* Keep the text color red */
}

.form-container {
    margin-top: 20px;

    .input-container {
        position: relative;
        width: 300px;
        margin-top: 1vh;
    }

    input[type="text"], select {
        width: 100%;
        padding: 10px 5px;
        margin-top: 5%;
        border: 2px solid white;
        border-radius: 15px;
        background-color: transparent;
        color: white;
        font-size: 16px;
        outline: none;
        transition: border-color 0.3s ease;
    }

    input[type="text"]:focus, select:focus {
        border-color: var(--primary-color);
        color: var(--primary-color);
    }

    label {
        position: absolute;
        top: 50%;
        left: 3%;
        color: var(--primary-color);
        font-size: 16px;
        pointer-events: none;
        transition: top 0.3s ease, font-size 0.3s ease, color 0.3s ease;
    }

    /* Change label color when the input has text or is focused */
    input[type="text"]:focus + label,
    input[type="text"]:not(:placeholder-shown) + label {
        top: 0;
        font-size: 12px;
    }

    /* Reset the label color when the input is valid */
    input[type="text"]:valid + label {
        color: var(--primary-color);
    }

    /* When input has error, change label color to red */
    input[type="text"].error + label,
    select.error + label {
        color: rgb(255, 111, 111); /* Red color for invalid state */
    }

    /* Input validation styles */
    input[type="text"].error, select.error {
        border-color: rgb(255, 111, 111);
        color: rgb(255, 111, 111);
        animation: shake 0.5s ease-in-out, border-color 0.3s ease-in-out;
    }

    input[type="text"].valid, select.valid {
        border-color: white;
        color: white;
    }

    select {
        color: var(--primary-color);
    }


    select option {
        color: var(--secondary-color); /* Set the color of the options in the dropdown */
    }

    select:focus {
        border-color: var(--primary-color);
        color: var(--primary-color); /* Color of the selected text when focused */
    }

    select option[value=""][disabled] {
        display: none;
    }

    button {
        position: relative; /* Position relative for pseudo-element */
        background-color: transparent; /* Clear background */
        border: 2px solid white; /* White border */
        border-radius: 15px; /* Rounded corners */
        padding: 10px 20px; /* Adjust padding for size */
        margin-top: 1vh;
        color: white; /* Text color */
        font-size: 16px; /* Adjust font size */
        cursor: pointer; /* Pointer cursor for hover effect */
        overflow: hidden; /* Hide overflow for smooth animation */
        transition: color 0.3s ease; /* Smooth transition for text color */
    }

    button::before {
        content: ''; /* Empty content for pseudo-element */
        position: absolute;
        top: 0;
        left: 0;
        width: 0; /* Start with no width */
        height: 100%; /* Full height */
        background-color: white; /* Background fill color */
        z-index: -1; /* Place behind text */
        transition: width 0.3s ease; /* Smooth transition for the fill */
    }
    
    button:hover::before {
        width: 100%; /* Fill to full width on hover */
    }
    
    button:hover {
        color: black; /* Change text color on hover */
    }
}

#responseMessage {
    background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent yellow background */
    font-family: 'Handlee', cursive;
    color: black; /* Text color */
    padding: 20px; /* Add padding for spacing */
    border-radius: 5px; /* Rounded corners */
    font-size: 18px; /* Larger font size */
    margin-top: 20px; /* Space between form and response message */
    text-align: center; /* Center-align text */
    font-weight: bold; /* Make the text bold */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Optional: Add a subtle shadow for better visibility */
}

/* Shaking animation */
@keyframes shake {
    0% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    50% { transform: translateX(5px); }
    75% { transform: translateX(-5px); }
    100% { transform: translateX(0); }
}


/* Modal Background */
#rsvpModal {
    display: none;
    position: fixed;
    top: 0; left: 0;
    width: 100vw; height: 100vh;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(8px);
    justify-content: center; align-items: center;
    z-index: 1000;
}

/* Modal Content */
.modal-content {
    background: white; padding: 20px;
    border-radius: 10px;
    width: 400px; max-width: 90%;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    text-align: center; position: relative;
    animation: fadeIn 0.3s ease-in-out;
}

/* Close Button */
.close-btn {
    position: absolute; top: 10px; right: 15px;
    background: none; border: none;
    font-size: 24px; cursor: pointer;
    color: black;
}
.close-btn:hover { color: red; }

/* RSVP Section */
.rsvp-section { margin-bottom: 10px; }
.rsvp-header {
    background: #007bff; color: white; padding: 10px;
    border: none; cursor: pointer; width: 100%; text-align: left;
    border-radius: 5px; position: relative;
}
.rsvp-header::before,
.rsvp-header::after {
    content: ''; position: absolute; top: 0; left: 0;
    width: 100%; height: 100%; background: #007bff;
    border-radius: 5px; z-index: -1; transition: all 0.3s ease;
}
.rsvp-header:focus::before,
.rsvp-header:active::before,
.rsvp-header:focus::after,
.rsvp-header:active::after { background: #007bff !important; }
.rsvp-header:focus, .rsvp-header:active { color: white !important; }

/* Content area for RSVP */
.rsvp-content {
    padding: 10px; border: 1px solid #ddd;
    display: none; text-align: left;
    background: #f9f9f9; border-radius: 5px;
}

/* Keyframe animations for title */
@keyframes growLetter {
    0% {
        opacity: 0;
        transform: scale(0);
    }
    50% {
        opacity: 1;
        transform: scale(1.2); /* Slightly larger at the middle */
    }
    100% {
        opacity: 1;
        transform: scale(1); /* Return to original size */
    }
}

/* Keyframe animations for title with rotation and text shadow */
@keyframes growAmp {
    0% {
        opacity: 0;
        transform: scale(0) rotate(0deg);
        text-shadow: none; /* No shadow at the start */
    }
    50% {
        opacity: 1;
        transform: scale(5) rotate(-25deg);
        text-shadow: 0 4px 10px rgba(0, 0, 0, 0.6); /* Shadow conforms to letters */
    }
    100% {
        opacity: 1;
        transform: scale(1.1) rotate(-15deg);
        text-shadow: none; /* Remove shadow at the end */
    }
}

@keyframes growIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes dropIn {
    from {
        opacity: 0;
        transform: translateY(-15px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Keyframes for dot movement */
@keyframes moveDotUp {
    0% {
        opacity: 1;
        transform: translateY(0);
    }
    100% {
        opacity: 0;
        transform: translateY(-150px); /* Move dots upwards */
    }
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

/* Blur Background */
body.blurred {
    overflow: hidden;
}
body.blurred::before {
    content: ""; position: fixed; top: 0; left: 0;
    width: 100%; height: 100%; backdrop-filter: blur(8px);
    z-index: 999;
}

/* Fade-in Animation */
@keyframes fadeIn {
    from { opacity: 0; transform: scale(0.9); }
    to { opacity: 1; transform: scale(1); }
}